import numpy as np
from projections import projection
from multiprocessing import Pool
from projections.utils import get_main_dir
from os import path, makedirs


def get_inverse_projection_files(inv_proj_type, data_name):
    """Returns the path to all files generated by a given projection type."""
    main_dir = path.join(get_main_dir(data_name), 'inverses', data_name)
    inv_proj_dir = path.join(main_dir, inv_proj_type)
    makedirs(inv_proj_dir, exist_ok=True)
    files = {'root': main_dir,
             'errors': path.join(inv_proj_dir, 'errors.npy')}
    return files


def inverse_error(X, Y, inverse):
    print('Calculating mean inverse projection error.')

    inverses = np.array([inverse.invert(Y[i]) for i in range(0, Y.shape[0])])

    print('Inverses shape: ' + str(inverses.shape))

    meshes = np.concatenate([X, inverses])

    print('Meshes shape: ' + str(meshes.shape))

    errors = np.array([projection.compute_mesh_distances(meshes, i, i + X.shape[0])
                       for i in range(0, X.shape[0])])

    print('Errors shape: ' + str(errors.shape))

    return errors
